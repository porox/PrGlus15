<?xml version="1.0" encoding="utf-8"?>
<article lang="ru">
  <articleinfo>
    <title>Общая часть пояснительной записки</title>
    <author>
      <firstname>Юрий</firstname>
      <surname>Домбровский</surname>
    </author>
    <copyright>
      <year>2015</year>
      <holder>Юрий Домбровский</holder>
    </copyright>
  </articleinfo>
<section>
  <para>
    Общая часть.
  </para>
</section>
  <section>
    <title>Обзор и анализ предметной области.</title>
    <para>
     База данных содейства  трудоустройста выпускников колледжа позволит облегчить поиск вакансий  выпускникам колледжа, а так же поможет работадателеям найти квалифицированных кадров.

Целью данной курсовой работы является разработка, тестирование и поддержка программного комплекса : " Система автоматизации парикмахерской"

Основные принципы предметной области:

	Регистрация  выпускника
В реестр заносяться данные о выпускнике колледжа и списке полученных знаний за время обучения . 
	Регистрация  нового предприятия
Регистрация осуществляется заполнением соответствующей формы анкетными данными о предприятии 
4)Добавление  вакансий предприятия.
Заносяться данные о требованиях предприятия к работнику, должности и мин. заработной плате . 
5)Поиск студентов удовлетворяющих вакансиям
На данном этапе производиться анализ требований предприятия и знаний студента, а так же критерии вынесенные предприятием и студентом.
Для обработки результатов будет использована клиент-серверная архитектура. Для развития данной системы следует использовать трёхзвенную архитектуру с разработкой Internet приложения.
    </para>
  </section>

  <section>
    <title>Жизненный цикл базы данных.</title>
    <para>
      Стадия анализа – на этой стадии будет производится анализ предметной области и выявляться требования к ней. Так же будет даваться оценка актуальности разработки. (п. 1.1.)
2.	Стадия проектирования – на этой стадии будет создана логическая структура базы данных, функциональное описание программных модулей и информационных запросов. (п. 2.1. – 2.4.) 
3.	Стадия реализации – на этой стадии решаются задачи по разработке программного доступа к базе данных, проводится тестирование. (п. 2.5. – 2.6.) 
4.	Стадия эксплуатации и сопровождения. (п. 2.7.)
    </para>
  </section>

<section>
    <title>Защита баз данных.</title>
    <para>
      Защита данных включает предупреждение случайного или несанкционированного доступа к данным, их изменения или разрушения со стороны пользователей или при сбоях аппаратуры. Реализация защиты включает:
•	контроль достоверности данных с помощью ограничений целостности;
•	обеспечение безопасности данных (физической целостности данных);
•	обеспечение секретности данных.

Методы защиты баз данных в различных СУБД несколько отличаются друг от друга. Анализ современных СУБД фирм Borland и Microsoft показывает, что они условно делятся на две группы: основные и дополнительные.
К основным средствам защиты относится:
•	  защита паролем;
•	  шифрование данных и программ;
•	  разграничение прав доступа к объектам базы данных;
•	  защита полей и записей таблиц БД.
Защита паролем представляет собой простой и эффективный способ защиты БД от несанкционированного доступа. Пароли устанавливаются пользователями или администраторами БД. Учет и хранение паролей выполняется самой СУБД. Обычно, пароли хранятся в определенных системных файлах СУБД в зашифрованном виде. После ввода пароля пользователю СУБД предоставляются все возможности по работе с БД. Парольная защита является достаточно слабым средством, особенно если пароль не шифруется.
Более мощным средством защиты данных от просмотра является их шифрование. Шифрование – это преобразование читаемого текста в нечитаемый текст, при помощи некоторого алгоритма; применяется для защиты уязвимых данных.
Процесс дешифрования восстанавливает данные в исходное состояние.
В целях контроля использования основных ресурсов СУБД во многих системах имеются средства установления прав доступа к объектам БД. Права доступа определяют возможные действия над объектами. Владелец объекта (пользователь, создавший объект), а также администратор БД имеют все права. Остальные пользователи к разным объектам могут иметь различные уровни доступа. Разрешение на доступ к конкретным объектам базы данных сохраняется в файле рабочей группы.
Файл рабочей группы содержит данные о пользователях группы и считывается во время запуска. Файл содержит следующую информацию: имена учетных записей пользователей, пароли пользователей, имена групп, в которые входят пользователи.
По отношению к таблицам могут предусматриваться следующие права доступа:
просмотр (чтение) данных;
•	  изменение (редактирование) данных;
•	  добавление новых записей;
•	  добавление и удаление данных;
•	  изменение структуры таблицы.
    </para>
  </section>

<section>
    <title>Выбор и характеристика СУБД.</title>
    <para>
      В качестве СУБД для выполнения КП выбрана среда MS SQL Server 2008 r2.

Microsoft SQL Server — мощная система управления реляционными базами данных (СУРБД), разработанная корпорацией Microsoft. Основной используемый язык запросов — Transact-SQL, создан совместно Microsoft и Sybase. Transact-SQL является реализацией стандарта ANSI/ISO по структурированному языку запросов (SQL) с расширениями, реализует объёмный набор встроенных функций, функций безопасности, имеет большое количество объектов, направленных на контроль данных, оптимизацию работы с данными, реализует удалённый доступ к базе, одновременную работу с базой с нескольких рабочих позиций, среда имеет простую конфигурацию и настройку, что упрощает её распространение и работу с ней. Используется для работы с базами данных размером от персональных до крупных баз данных масштаба предприятия; конкурирует с другими СУБД в этом сегменте рынка.

SQL Server 2008 R2 обеспечивает интеграцию с Microsoft Office, гарантирует повышенную безопасность и производительность средств разработки, масштабируемость и высокая доступность
    </para>
  </section>

<section>
    <title>Выбор и характеристика среды разработки приложения.</title>
    <para>
      В качестве среды разработки будет использована Embarcadero RAD Studio XE5.

Embarcadero RAD Studio — среда быстрой разработки приложений (RAD) для Microsoft Windows фирмы Embarcadero Technologies.
Текущая версия Embarcadero RAD Studio XE5 объединяет Delphi XE5 и C++ Builder XE5 в единую интегрированную среду разработки.

Данная среда и язык Embarcadero Delphi выбрана из-за: уникальной совокупности простоты языка и генерации машинного кода, которая позволяет непосредственно, и, при желании, достаточно низкоуровнево взаимодействовать с операционной системой, а также с библиотеками, написанными на C/C++; создания программ, которые не зависимы от стороннего ПО, например от Microsoft .NET Framework, или Java Virtual Machine; выделение и освобождение памяти, которое контролируется в основном пользовательским кодом, что, с одной стороны, ужесточает требования к качеству кода, а с другой — делает возможным создание сложных приложений, с высокими требованиями к отзывчивости (работа в реальном времени). Таким образом данная среда позволяет просто, эффективно и качественно разрабатывать различные эргономичные, многофункциональные, оптимальные приложения.
Delphi — это объектно-ориентированная среда для визуального проектирования Windows приложений с развитыми механизмами повторного использования программного кода. Основным конкурентом Delphi является среда разработк Microsoft Visual C++, имеющая свои преимущества и недостатки, однако являющаяся более популярной, в основном, в силу того, что разработана именно фирмой Microsoft Существенной чертой Delphi является компонентная модель разработки программных продуктов. Суть модели заключается в поддержке системой постоянно расширяемого набора объектных компонентов, из которых и строится программа. Компоненты в Delphi просты для использования и развития, как результат сокрытия значительной части той структуры программы, которая близка к взаимодействию с операционной системой. Таким образом, для создания в Delphi несложных программных продуктов совершенно не обязательно понимать внутреннюю структуру Windows-приложения, получаемого после разработки в Delphi. Достаточно просто уметь работать с некоторыми компонентами, поставляемыми вместе со средой разработчика. При этом начать работу со средой можно практически без предварительного ознакомления, а написание первого приложения не потребует углубления в особенности системы. Этому отчасти способствует удобный интерфейс среды разработчика, не перегруженный излишними вопросами к разработчику.
Однако такой подход совершенно неприемлем для серьезного программирования, и, рано или поздно, придется освоить и основы программирования под ОС Windows, и серьезно изучить саму среду разработки Delphi, а также возможности, которые она предоставляет. Кроме того, конечно же, для создания качественных программных продуктов необходимо глубокое понимание компонентной модели.
    </para>
  </section>
</article>
